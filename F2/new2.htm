<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>简单计算器功能实现</title>
	<script src="jquery-2.1.4.js"></script>
	<link rel="stylesheet" type="text/css" href="counter.css">
</head>
<body>
	<div class="main">
		<form name="counter">
		<div class="nav"><center>计算器</center></div>
		<div class="content"><input name="display" readOnly  value=0 ></div>
		<div class="convertion">
			<table>
			<tr>
				<td >
					<table class="hh">
					<tr>
						<td>括号显示：<input name=bracket readOnly size=4 style="background:silver;"> </td>
        			</tr>
        			<tr>
        					<td>运算符：<input name=operator readOnly size=4  style="background:silver; "> </td>
					</tr>
					<tr>
        					<td>存储成功：<input name=memory readOnly size=4  style="background:silver; "> </td>
					</tr>
					<tr height="60px"></tr>
					<tr>
						<td>
							<input type="radio" name="conv" onclick=tran_Conv(16)>十六进制
						</td>
					</tr>
					<tr>
						<td>
							<input type="radio" name="conv"  onclick=tran_Conv(10) checked="checked" >十进制
						</td>
					</tr>
					<tr>
						<td>
							<input type="radio" name="conv" onclick=tran_Conv(2)>二进制
						</td>
					</tr>
					</table>
				</td>

				<td>
					<table class="dd">
					<tr><td><input type="button" id="noEdit3" onclick="getNum('a')" value="A"></td></tr>
					<tr><td><input type="button" id="noEdit3" onclick="getNum('b')" value="B"></td></tr>
					<tr><td><input type="button" id="noEdit3" onclick="getNum('c')" value="C"></td></tr>
					<tr><td><input type="button" id="noEdit3" onclick="getNum('d')" value="D"></td></tr>
					<tr><td><input type="button" id="noEdit3" onclick="getNum('e')" value="E"></td></tr>
					<tr><td><input type="button" id="noEdit3" onclick="getNum('f')" value="F"></td></tr>
					</table>
				</td>
				<td>
					<table class="kk">
					<tr>
					<th><input type="button" id="noEdit1" onclick="fun_Event('!','!')" value="!"></th>
					<th><input type="button" id="noEdit1" onclick="opr_Tag('^',7)" value="^"></th>
					<th><input type="button" id="noEdit1" onclick="fun_Event('√','sqrt')" value="√"></th>
					<th><input type="button" id="noEdit1" onclick="fun_Event('e','e')" value="e"></th>
					<th><input type="button"  value="M+" onclick="inMemory()"></th>
					</tr>
					<tr>					
					<td><input type="button" onclick="brac_show()" value="(" style="background:lightgreen;"></td>
					<td><input type="button" onclick="right_brac()" value=")" style="background:lightgreen;"></td>
					<td><input type="button" onclick="deletePre()" value="DEL" style="background:lightgreen;"></td>
					<td><input type="button" onclick="clearall()" value="CL" style="background:lightgreen;"></td>
					<td><input type="button" onclick="outMemory()" value="M-"></td>
					</tr>
					<tr>					
					<td><input id="noEdit2" onClick="getNum('7')" type="button" value="7" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2" onclick="getNum('8')" type="button" value="8" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2" onclick="getNum('9')" type="button" value="9" style="background:#6A5ACD;"></td>
					<td><input type="button" onclick="opr_Tag('+',5)" value="+" style="background:lightgreen;"></td>
					<td><input type="button" value="MC" onclick="clrMemory()"></td>
					</tr>
					<tr>					
					<td><input id="noEdit2" onclick="getNum('4')" type="button" value="4" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2" onclick="getNum('5')" type="button" value="5" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2" onclick="getNum('6')" type="button" value="6" style="background:#6A5ACD;"></td>
					<td><input onclick="opr_Tag('-',5)" type="button" value="-" style="background:lightgreen;"></td>
					<td><input type="button" onClick="opr_Tag('%',6)" value="%"></td>
					</tr>
					<tr>					
					<td><input onclick="getNum('1')" type="button" value="1" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2" onclick="getNum('2')" type="button" value="2" style="background:#6A5ACD;"></td>
					<td><input id="noEdit2"  onclick="getNum('3')" type="button" value="3" style="background:#6A5ACD;"></td>
					<td><input type="button" onclick="opr_Tag('*',6)" value="*" style="background:lightgreen;"></td>
					<td><input type="button" name=ln onclick="fun_Event('ln','ln')" value="ln"></td>
					</tr>
					<tr>
					<td><input type="button" onclick="getNum('0')" type="button" value="0" style="background:#6A5ACD;"></td>
					<td><input type="button" onclick="getNum('.')" value="." style="background:#6B8E23;"></td>
					<td><input type="button" id="noEdit1" onclick="fun_Event('pi','pi')" value="π" style="background:#6A5ACD;"></td>
					<td><input type="button" onclick="opr_Tag('/',6)" value="/" style="background:lightgreen;"></td>
					<td><input type="button" onclick="result()" value="=" style="background:pink;"></td>
					</tr>
					</table>
				</td>
			</tr>
			</table>
		</div>
		</form>
	</div>
</body>
<script>

/*数字显示*/
var conv=10;  	//表示当前进制数
var flag=true;
function getNum(num) {

	var index=num.charCodeAt(0);

	if ((conv==2 && (index==48 || index==49))
	 || (conv==10 && (index>=48 && index<=57 ||index==46))
	 ||(conv==16 && ((index>=48 && index<=57)|| (index>=97 && index<=102))))

	if (flag) {
		flag=false;
		document.counter.display.value =num;
	}

	else if (document.counter.display.value == null || document.counter.display.value == "0") {
		document.counter.display.value=num;
	}

	else {
		document.counter.display.value +=num;
	}
}

/*括号*/
var layer=0;     //括号层数变量
var save="";	 //用来保存本次输入之前的内容变量
var level="0";
function brac_show()
{
	
	document.counter.display.value=0;
	save=save+"(";
	document.counter.operator.value="   ";
	level=level+0;
	layer+=1;
	document.counter.bracket.value="层数:"+layer;
}

function right_brac()  
{
	var tmp=save.substr(save.lastIndexOf("(")+1)+document.counter.display.value;

	while ((level.charAt(level.length-1))>0)
	{
		tmp=express(tmp);
		level=level.slice(0,-1);
	}	

	document.counter.display.value=tmp;
	save=save.substr(0,save.lastIndexOf("("));
	document.counter.operator.value="   ";
	level=level.slice(0,-1);
	layer-=1;

	if (layer>0) {
		document.counter.bracket.value="(="+layer;
	}else {
		document.counter.bracket.value="";}
}


/*等号*/
function result()
{
	flag=true;
	while (layer>0) {
		right_brac();
	}
	var temp=save+document.counter.display.value;

	while ((level.charAt(level.length-1))>0)
	{
		temp=express(temp);
		level=level.slice(0,-1)
	}

	document.counter.display.value=temp;
	document.counter.bracket.value="";
	document.counter.operator.value="";
	save="";
	level="0";
}


/*回退键*/
function deletePre()
{
	if (!flag) {
		document.counter.display.value;
		if (document.counter.display.value.length>1) {
			document.counter.display.value=document.counter.display.value.substring(0,document.counter.display.value.length-1);
		}else {document.counter.display.value=0;}
	}
}


/*清除键*/
function clearall()
{
	document.counter.display.value=0;
	flag=true;
	save="";
	level="0";
	layer="";
	document.counter.operator.value="";
	document.counter.bracket.value="";
}


/*十进制转换*/
var hexnum="0123456789abcdef";
function to_Dec(num,preconv)
{
	if (preconv==10||num==0) return num;

	var minus=(num.charAt(0)=="-");
	if (minus) {num=num.substr(1);}

	var newnum=0;
	for (var index=1;index<=num.length;index++) {
		newnum=newnum*preconv+hexnum.indexOf(num.charAt(index-1));
	}

	if (minus){                 //考虑负数的情况
		newnum=-newnum;
	}

	return newnum;				//返回一个新数
}


function dec_Chg(num,newconv)
{
	var minus=(num<0);
	if (newconv==10 || num==0) {return num;}
	num=""+Math.abs(num);
	var newnum="";

	while (num!=0)
	{
		newnum=hexnum.charAt(num%newconv)+newnum;
		num=Math.floor(num/newconv);
	}

	if (minus)         
		{newnum="-"+newnum};
	return newnum;
}


/*运算功能实现*/
function caculate(num1,opr,num2)
{
	num1=to_Dec(num1,conv);
	num2=to_Dec(num2,conv);

	if (opr=="+")
		return dec_Chg(parseFloat(num1)+parseFloat(num2),conv);
	if (opr=="-")
		return dec_Chg(num1-num2,conv);
	if (opr=="*")
		return dec_Chg(num1*num2,conv);
	if (opr=="/" && num2!=0)
		return dec_Chg(num1/num2,conv);
	if (opr=="%")
		return dec_Chg(num1%num2,conv);
	if (opr=="^")
		return dec_Chg(Math.pow(num1,num2),conv);
	alert("除数不能为零");
	return num1;
}


/*阶乘函数*/
function fact(n)
{
	var k=Math.abs(parseInt(n));
	var fac=1;
	for (;k>0;k--){
		fac*=k;
	}
	return(fac);
}


/*计算器函数库*/
function counter(fun,num)
{
	with(Math)
	{
		if(fun=="pi")
			return (PI);
		if(fun=="e")
			return (E);
		if(fun=="ln" && num>0)
			return log(num);
		if(fun=="sqrt" && num>=0)
			return sqrt(num);
		if(fun=="!")
			return fact(num);
		return num;
	}
}


/*函数键*/
function fun_Event(fun,postFun)
{
	flag=true;
	if (flag) {
		document.counter.display.value=dec_Chg(counter(postFun,(to_Dec(document.counter.display.value,conv))),conv);
	}
}


/*运算符,下面两个方法是借的*/
function opr_Tag(opr,newlevel)
{
	flag=true;
	var temp=save.substr(save.lastIndexOf("(")+1)+document.counter.display.value;
	while (newlevel!=0 && (newlevel<=(level.charAt(level.length-1))))
	{
		temp=express(temp);
		level=level.slice(0,-1);  
	}
	if (temp.match(/^(.*\d[\+\-\*\/\^\|x])?([+-]?[0-9a-f\.]+)$/)) {
		document.counter.display.value=RegExp.$2;
	}
	save=save.substr(0,save.lastIndexOf("(")+1)+temp+opr;
	document.counter.operator.value=" "+opr+" ";
	level=level+newlevel;	
}


/*表达式*/
function express(expression)
{
	if (expression.match(/^(.*\d[\+\-\*\/\%\^\|x\<])?([+-]?[0-9a-f\.]+)([\+\-\*\/\%\^\|x\<])([+-]?[0-9a-f\.]+)$/)) {
		return RegExp.$1+caculate(RegExp.$2,RegExp.$3,RegExp.$4);
	}
	else {
		return expression;
	}
}


/*进制转换*/
function tran_Conv(newconv) {
	flag=true;
	document.counter.display.value=(dec_Chg(to_Dec(document.counter.display.value,conv),newconv))
	switch (newconv){
		case 2:
			$("input#noEdit1,input#noEdit2,input#noEdit3").css("background-color","#ccc");
			$("input#noEdit1,input#noEdit2,input#noEdit3").disabled=false;
			break;

		case 10:
			$("input#noEdit3").css("background-color","#ccc");
			$("input#noEdit3").disabled=false;
			break;	

		case 16:
			$("input#noEdit1").css("background-color","#ccc");
			$("input#noEdit1").disabled=false;
			break;
	}
}

/*存储器功能实现*/
var mem=0;
function outMemory(){
	//取出功能
	document.counter.display.value=dec_Chg(mem,conv);
}

function inMemory(){
	//储存功能
	flag=true;
	if (document.counter.display.value!=0) {
		mem=to_Dec(document.counter.display.value,conv);
		document.counter.memory.value="Yes";
	}else {
		document.counter.memory.value=" ";
	}
}

function clrMemory(){
	//清除功能
	mem=0;
	document.counter.memory.value="  ";
}
</script>
</html>
